process Test = 
{
# configuer MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  replace MessageLogger.cerr.threshold = "INFO"
  //service = MessageLogger {untracked vstring categories = { "Test" }}
  replace MessageLogger.cerr.FwkReport.reportEvery = 1000

# input file(s)
  source = PoolSource {
    untracked vstring fileNames = {
      "file:USE A CSA07 CHOWDER SAMPLE!"
    }
    untracked uint32 skipEvents = {$skipevents}
  }
  #source replacement
  {$source}
  untracked PSet maxEvents = {untracked int32 input = {$events}}

  # file service
  service = TFileService {
    string fileName = "{$output}"
  }
  
#cuts
# make final event selection
  module trackIsoFilter = semiLepMuonEventIso from "TopAnalysis/TopFilter/data/combinedFilters/SemiLepMuonEventIsoFilter.cff"
  module caloIsoFilter = semiLepMuonEventIso from "TopAnalysis/TopFilter/data/combinedFilters/SemiLepMuonEventIsoFilter.cff"
  module jetIsoFilter = semiLepMuonEventIso from "TopAnalysis/TopFilter/data/combinedFilters/SemiLepMuonEventIsoFilter.cff"
  module allFilter = semiLepMuonEventIso from "TopAnalysis/TopFilter/data/combinedFilters/SemiLepMuonEventIsoFilter.cff"
  
  module looseSelection = semiLepMuonEvent from "TopAnalysis/TopFilter/data/combinedFilters/SemiLepMuonEventFilter.cfi"
  replace looseSelection.useTrkIso = false
  replace looseSelection.useCalIso = false
  replace looseSelection.useJetIso = false  
  
  replace trackIsoFilter.useTrkIso = true
  replace trackIsoFilter.useCalIso = false
  replace trackIsoFilter.useJetIso = false  
  
  replace caloIsoFilter.useTrkIso = false
  replace caloIsoFilter.useCalIso = true
  replace caloIsoFilter.useJetIso = false
  
  replace jetIsoFilter.useTrkIso = false
  replace jetIsoFilter.useCalIso = false
  replace jetIsoFilter.useJetIso = true  
  
  replace allFilter.useTrkIso = true
  replace allFilter.useCalIso = true
  replace allFilter.useJetIso = true  
  
  include "TopAnalysis/TopFilter/data/semiLepMuonSelection_fin.cff"
  #loose
  replace SemiJetsPtCut.minPt = {20,20,20,20}
  replace SemiMuonPtCut.minPt = {20}
  #middle
  #replace SemiJetsPtCut.minPt = {40,40,40,40}
  #replace SemiMuonPtCut.minPt = {20}
  #hard
  #replace SemiJetsPtCut.minPt = {30,30,60,75}
  #replace SemiMuonPtCut.minPt = {30}
  
 #other cuts:
 #replace SemiJetsPtCut.minPt = {25,25,25,25}
 #replace SemiJetsPtCut.minPt = {30,30,30,30}
 #replace SemiJetsPtCut.minPt = {35,35,35,35}
 
  #muon within tracker acceptance
  replace SemiMuonEtaCut.minEta = {-2.1}
  replace SemiMuonEtaCut.maxEta = {2.1}
  
  #Background analyzer
  module trackmbefore = analyzeisolationMET from "TopAnalysis/TopAnalyzer/data/IsolationAnalyzer.cfi"
  module trackmafter = analyzeisolationMET from "TopAnalysis/TopAnalyzer/data/IsolationAnalyzer.cfi"
  
  module calombefore = analyzeisolationMET from "TopAnalysis/TopAnalyzer/data/IsolationAnalyzer.cfi"
  module calomafter = analyzeisolationMET from "TopAnalysis/TopAnalyzer/data/IsolationAnalyzer.cfi"
  
  module jetIsombefore = analyzeisolationMET from "TopAnalysis/TopAnalyzer/data/IsolationAnalyzer.cfi"
  module jetIsomafter = analyzeisolationMET from "TopAnalysis/TopAnalyzer/data/IsolationAnalyzer.cfi"
  
  module allmbefore = analyzeisolationMET from "TopAnalysis/TopAnalyzer/data/IsolationAnalyzer.cfi"
  module allmafter = analyzeisolationMET from "TopAnalysis/TopAnalyzer/data/IsolationAnalyzer.cfi"
  
  replace trackmbefore.useMVA = true
  replace trackmafter.useMVA = true
  replace calombefore.useMVA = true
  replace calomafter.useMVA = true
  replace jetIsombefore.useMVA = true
  replace jetIsomafter.useMVA = true
  replace allmbefore.useMVA = true
  replace allmafter.useMVA = true
  
  include "TopAnalysis/TopAnalyzer/data/MatrixAnalyzerBins.cff"
  
  module analyzeSelJets = analyzeJets from "TopAnalysis/TopAnalyzer/data/JetAnalyzer.cfi"
  replace analyzeSelJets.input = selectedLayer1Jets
  module analyzeSelMuons = analyzeMuon  from "TopAnalysis/TopAnalyzer/data/MuonAnalyzer.cfi"
  replace analyzeSelMuons.input = selectedLayer1Muons
  
  #include "TopAnalysis/TopAnalyzer/data/EventShapeAnalyzerMuon.cfi"
  #replace analyzeEventShapeMuon.minPt = 20
  #replace analyzeEventShapeMuon.maxEta = 2.1
  #replace analyzeEventShapeMuon.doMatching = false
  
  
  include "TopAnalysis/TopAnalyzer/data/IsolationAnalyzer.cfi"
  #ttbar only
  replace analyzeisolationMET.ttbarMC = {$ttbarMC}
  replace analyzeisolationMET.useMVA = true
  
  # add event weight
  {$eventWeight}
  
  module mvaDiscFilter = doublefilter from "TopAnalysis/TopFilter/data/singleFilters/DoubleEventFilter.cfi"
  replace DoubleCut.min = {0.}
  replace DoubleCut.max = {0.1}
 


include "TopQuarkAnalysis/TopEventProducers/data/TtSemiLeptonicFilter.cfi"
  replace ttSemiLeptonicFilter.channel_1 = {0,1,0}

include "TopQuarkAnalysis/TopEventProducers/data/TtFullyHadronicFilter.cfi"
  
## std sequence for ttGenEvent
  include "TopQuarkAnalysis/TopEventProducers/data/TtGenEvtProducer.cff"

 {$mvamodule}
  
module analyzeMVA = analyzeDisc from "TopAnalysis/TopAnalyzer/data/DiscAnalyzer.cfi"
module analyzeDiscFilter = analyzeDisc from "TopAnalysis/TopAnalyzer/data/DiscAnalyzer.cfi"
replace analyzeMVA.modulename = "makeMVA"
replace analyzeDiscFilter.modulename = "makeMVA"
## make trainer looper known to the process
{$looper}

  
#-------------------------------------------------
# process paths;
#-------------------------------------------------
{$paths}

  #endpath outpath = { out }
  
}
