process Test = 
{
# configuer MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  replace MessageLogger.cerr.threshold = "INFO"
  //service = MessageLogger {untracked vstring categories = { "Test" }}
  replace MessageLogger.cerr.FwkReport.reportEvery = 1000

# input file(s)
  source = PoolSource {
    untracked vstring fileNames = {
      "file:USE A CSA07 CHOWDER SAMPLE!"
    }
  }
  {$source}
  untracked PSet maxEvents = {untracked int32 input = {$events}}


  # file service
  service = TFileService {
    string fileName = "{$output}"
  }
  
#cuts
  include "TopAnalysis/TopFilter/data/semiLepMuonSelection_fin.cff"
  
  replace SemiJetsPtCut.minPt = {20,20,20,20}
  replace SemiMuonPtCut.minPt = {20}
  #muon within tracker acceptance
  replace SemiMuonEtaCut.minEta = {-2.1}
  replace SemiMuonEtaCut.maxEta = {2.1}
  
  # add event weight
  {$eventWeight}
  
  module mvaDiscFilter = doublefilter from "TopAnalysis/TopFilter/data/singleFilters/DoubleEventFilter.cfi"
  replace DoubleCut.min = {0.}
  replace DoubleCut.max = {0.1}
 
 module looseSelection = semiLepMuonEvent from "TopAnalysis/TopFilter/data/combinedFilters/SemiLepMuonEventFilter.cfi"
  replace looseSelection.useTrkIso = false
  replace looseSelection.useCalIso = false
  replace looseSelection.useJetIso = false  

include "TopQuarkAnalysis/TopEventProducers/data/TtSemiLeptonicFilter.cfi"
  replace ttSemiLeptonicFilter.channel_1 = {0,1,0}

include "TopQuarkAnalysis/TopEventProducers/data/TtFullyHadronicFilter.cfi"
  
## std sequence for ttGenEvent
  include "TopQuarkAnalysis/TopEventProducers/data/TtGenEvtProducer.cff"

 {$mvamodule}
  
include "TopAnalysis/TopAnalyzer/data/DiscAnalyzer.cfi"

## make trainer looper known to the process
{$looper}

  
#-------------------------------------------------
# process paths;
#-------------------------------------------------
{$paths}

#only Computer
# define the event content
#  block myEventContent = {
#    untracked vstring outputCommands = {
#      "drop *"
#      ,"keep double_*_DiscSel_*"
#    }
#  }
  
  # the actual output module
#  module out = PoolOutputModule {
#    untracked string fileName = "Lkh_output"
#    using myEventContent
#    untracked bool verbose = false
# }

  #endpath outpath = { out }
  
}
